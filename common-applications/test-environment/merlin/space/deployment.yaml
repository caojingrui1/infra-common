apiVersion: apps/v1
kind: Deployment
metadata:
  name: space-deployment
  namespace: merlin
spec:
  selector:
    matchLabels:
      app: space
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'merlin'
        vault.hashicorp.com/agent-inject-containers: 'space'
        vault.hashicorp.com/agent-inject-secret-compose-config.yml: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-server.crt: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-server.key: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-hw-guiyang-cci-test-config.yml: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-hw-guiyang-cci-prod-config.yml: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-hw-guiyang-k8s-test-config.yml: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-hw-guiyang-k8s-prod-config.yml: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-telecom-hangzhou-k8s-test-config.yml: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-telecom-beijing-k8s-prod-config.yml: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-kafka.crt: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-sql.crt: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-docker.json: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-space-client.yml: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-vault.crt: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-perms-compose-config.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-server.crt: "0400"
        vault.hashicorp.com/agent-inject-perms-server.key: "0400"
        vault.hashicorp.com/agent-inject-perms-hw-guiyang-cci-test-config.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-hw-guiyang-cci-prod-config.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-hw-guiyang-k8s-test-config.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-hw-guiyang-k8s-prod-config.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-telecom-hangzhou-k8s-test-config.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-telecom-beijing-k8s-prod-config.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-kafka.crt: "0400"
        vault.hashicorp.com/agent-inject-perms-sql.crt: "0400"
        vault.hashicorp.com/agent-inject-perms-docker.json: "0400"
        vault.hashicorp.com/agent-inject-perms-space-client.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-vault.crt: "0400"
        vault.hashicorp.com/agent-run-as-user: "1000"
        vault.hashicorp.com/agent-run-as-group: "1000"
        vault.hashicorp.com/agent-inject-template-compose-config.yml: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.spaceConf }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-space-client.yml: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.spaceClientConf }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-server.crt: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.ServerCrt }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-server.key: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.ServerKey }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-hw-guiyang-cci-test-config.yml: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.cciConf }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-hw-guiyang-cci-prod-config.yml: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.cciConf }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-hw-guiyang-k8s-test-config.yml: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.k8sConf }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-hw-guiyang-k8s-prod-config.yml: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.k8sConfProd }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-kafka.crt: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.kafkaCA }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-sql.crt: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.pgsqlCA }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-docker.json: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.spaceSwrLogin }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-vault.crt: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.vaultCA }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-telecom-hangzhou-k8s-test-config.yml: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.k8sConfTianyiyun }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-telecom-beijing-k8s-prod-config.yml: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.k8sConfTianyiyunBeijing }}
          {{- end }}
        vault.hashicorp.com/agent-service-account-token-volume-name: "token-vol"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/agent-inject-command-compose-config.yml: |
          if [ $(netstat -anlp | grep 8123 | grep LISTEN | wc -l) -eq 1 ];then rm -rf /vault/secrets/*; else echo "service not running skip";fi
        vault.hashicorp.com/agent-inject-command-server.crt: |
          if [ $(netstat -anlp | grep 8123 | grep LISTEN | wc -l) -eq 1 ];then rm -rf /vault/secrets/*; else echo "service not running skip";fi
        vault.hashicorp.com/agent-inject-command-server.key: |
          if [ $(netstat -anlp | grep 8123 | grep LISTEN | wc -l) -eq 1 ];then rm -rf /vault/secrets/*; else echo "service not running skip";fi
        vault.hashicorp.com/agent-inject-command-space-client.yml: |
          if [ $(netstat -anlp | grep 8123 | grep LISTEN | wc -l) -eq 1 ];then rm -rf /vault/secrets/*; else echo "service not running skip";fi
        vault.hashicorp.com/agent-inject-command-kafka.crt: |
          if [ $(netstat -anlp | grep 8123 | grep LISTEN | wc -l) -eq 1 ];then rm -rf /vault/secrets/*; else echo "service not running skip";fi
        vault.hashicorp.com/agent-inject-command-sql.crt: |
          if [ $(netstat -anlp | grep 8123 | grep LISTEN | wc -l) -eq 1 ];then rm -rf /vault/secrets/*; else echo "service not running skip";fi
        vault.hashicorp.com/agent-inject-command-docker.json: |
          if [ $(netstat -anlp | grep 8123 | grep LISTEN | wc -l) -eq 1 ];then rm -rf /vault/secrets/*; else echo "service not running skip";fi
        vault.hashicorp.com/agent-inject-command-vault.crt: |
          if [ $(netstat -anlp | grep 8123 | grep LISTEN | wc -l) -eq 1 ];then rm -rf /vault/secrets/*; else echo "service not running skip";fi
        vault.hashicorp.com/template-static-secret-render-interval: 5s
      labels:
        app: space
    spec:
      serviceAccount: merlin
      imagePullSecrets:
      - name: huawei-swr-image-pull-secret
      securityContext:
        seccompProfile:
          type: Localhost
          localhostProfile: infra-seccomp.json
      automountServiceAccountToken: false
      containers:
      - name: space 
        image: swr.cn-north-4.myhuaweicloud.com/opensourceway/gitea/merlin-space-test:main-5a3d7e
        imagePullPolicy: IfNotPresent
        env:
        - name: CONFIG_FILE
          value: /vault/secrets/compose-config.yml
        - name: LOG_PATH
          value: /var/log/space-server.log
        - name: SPACE_CLIENT_CONFIG_FILE
          value: /vault/secrets/space-client.yml
        - name: IP
          value: "0.0.0.0"
        - name: PORT
          value: "8123"
        - name: REMOVE_CONFIG
          value: "true"
        - name: ENABLE_DEBUG
          value: "true"
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8123
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8123
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/bash
              - -c
              - rm -rf /vault/secrets/*
        resources:
          limits:
            cpu: "4"
            memory: 8Gi
          requests:
            cpu: "2"
            memory: 2Gi 
        volumeMounts:
          - mountPath: /var/log/
            name: data-volume
          - mountPath: /tmp/
            name: tmp-volume
          - mountPath: /home/openmind/images
            name: images-volume
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
      volumes:
      - name: buildkitd
        emptyDir: {}
      - name: data-volume
        persistentVolumeClaim:
          claimName: space-log-volume
      - name: tmp-volume
        persistentVolumeClaim:
          claimName: space-data-volume
      - name: images-volume
        persistentVolumeClaim:
          claimName: space-images-volume
      - name: token-vol
        projected:
          sources:
          - serviceAccountToken:
              audience: api
              expirationSeconds: 600
              path: token
