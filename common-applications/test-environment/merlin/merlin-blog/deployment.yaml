---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: merlin-blog
  namespace: merlin
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: merlin-blog
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: merlin-website
        vault.hashicorp.com/agent-inject-perms-server.crt: "0400"
        vault.hashicorp.com/agent-inject-perms-server.key: "0400"
        vault.hashicorp.com/agent-inject-perms-abc.txt: "0400"
        vault.hashicorp.com/agent-inject-perms-dhparam.pem: "0400"
        vault.hashicorp.com/agent-run-as-user: "1000"
        vault.hashicorp.com/agent-run-as-group: "1000"
        vault.hashicorp.com/secret-volume-path: "/etc/nginx/cert/"
        vault.hashicorp.com/agent-inject-secret-server.crt: "internal/data/infra-test/merlin-website"
        vault.hashicorp.com/agent-inject-template-server.crt: |
          {{- with secret "internal/data/infra-test/merlin-website" -}}
          {{ .Data.data.ServerCrt }}
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-server.key: "internal/data/infra-test/merlin-website"
        vault.hashicorp.com/agent-inject-template-server.key: |
          {{- with secret "internal/data/infra-test/merlin-website" -}}
          {{ .Data.data.ServerKey }}
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-abc.txt: "internal/data/infra-test/merlin-website"
        vault.hashicorp.com/agent-inject-template-abc.txt: |
          {{- with secret "internal/data/infra-test/merlin-website" -}}
          {{ .Data.data.certificatePassword }}
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-dhparam.pem: "internal/data/infra-test/merlin-website"
        vault.hashicorp.com/agent-inject-template-dhparam.pem: |
          {{- with secret "internal/data/infra-test/merlin-website" -}}
          {{ .Data.data.dhparamPem }}
          {{- end }}
        vault.hashicorp.com/agent-service-account-token-volume-name: "token-vol"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/agent-inject-command-abc.txt: |
          if [ $(netstat -anlp | grep 8080| wc -l) -ge 1 ]; then rm -rf /etc/nginx/cert/*; else echo "service not running skip"; fi
        vault.hashicorp.com/agent-inject-command-server.crt: |
          if [ $(netstat -anlp | grep 8080| wc -l) -ge 1 ]; then rm -rf /etc/nginx/cert/*; else echo "service not running skip"; fi
        vault.hashicorp.com/agent-inject-command-server.key: |
          if [ $(netstat -anlp | grep 8080| wc -l) -ge 1 ]; then rm -rf /etc/nginx/cert/*; else echo "service not running skip"; fi
        vault.hashicorp.com/agent-inject-command-dhparam.pem: |
          if [ $(netstat -anlp | grep 8080| wc -l) -ge 1 ]; then rm -rf /etc/nginx/cert/*; else echo "service not running skip"; fi
        vault.hashicorp.com/template-static-secret-render-interval: 5s
      labels:
        app: merlin-blog
    spec:
      serviceAccount: merlin
      imagePullSecrets:
      - name: huawei-swr-image-pull-secret
      securityContext:
        seccompProfile:
          type: Localhost
          localhostProfile: infra-seccomp.json
      automountServiceAccountToken: false
      containers:
      - name: merlin-blog
        image: swr.cn-north-4.myhuaweicloud.com/opensourceway/gitea/merlin-blog-test:staging-0363b4
        imagePullPolicy: IfNotPresent
        env:
        - name: DET_URL
          value: https://modelfoundry-blog.test.osinfra.cn/blog/
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          httpGet:
            scheme: HTTPS
            path: /404.html
            port: 8080
          timeoutSeconds: 10
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          httpGet:
            scheme: HTTPS
            path: /404.html
            port: 8080
          timeoutSeconds: 10
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/bash
              - -c
              - rm -rf /etc/nginx/cert/*
        resources:
          requests:
            cpu: 500m
            memory: 500Mi
          limits:
            cpu: 500m
            memory: 500Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
      volumes:
      - name: token-vol
        projected:
          sources:
          - serviceAccountToken:
              audience: api
              expirationSeconds: 600
              path: token
