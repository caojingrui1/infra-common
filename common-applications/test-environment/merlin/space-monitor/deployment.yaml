apiVersion: apps/v1
kind: Deployment
metadata:
  name: space-monitor-deployment
  namespace: merlin
spec:
  selector:
    matchLabels:
      app: space-monitor
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'merlin'
        vault.hashicorp.com/agent-inject-containers: 'space-monitor'
        vault.hashicorp.com/agent-inject-secret-compose-config.yml: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-server.crt: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-server.key: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-secret-sql.crt: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-perms-compose-config.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-server.crt: "0400"
        vault.hashicorp.com/agent-inject-perms-server.key: "0400"
        vault.hashicorp.com/agent-inject-perms-sql.crt: "0400"
        vault.hashicorp.com/agent-run-as-user: "1000"
        vault.hashicorp.com/agent-run-as-group: "1000"
        vault.hashicorp.com/agent-inject-template-compose-config.yml: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.spacemonitorConf }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-server.crt: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.ServerCrt }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-server.key: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.ServerKey }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-sql.crt: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.pgsqlCA }}
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-kafka.crt: 'internal/data/infra-test/merlin'
        vault.hashicorp.com/agent-inject-perms-kafka.crt: "0400"
        vault.hashicorp.com/agent-inject-template-kafka.crt: |  
          {{- with secret "internal/data/infra-test/merlin" -}}  
          {{ .Data.data.kafkaCA }}
          {{- end }}
        vault.hashicorp.com/agent-service-account-token-volume-name: "token-vol"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/agent-inject-command-compose-config.yml: |
          if [ $(netstat -anlp | grep 8124| wc -l) -eq 1 ];then rm -rf /vault/secrets/*;else echo "service not running skip";fi
        vault.hashicorp.com/template-static-secret-render-interval: 5s
      labels:
        app: space-monitor
    spec:
      serviceAccount: merlin
      imagePullSecrets:
      - name: huawei-swr-image-pull-secret
      securityContext:
        seccompProfile:
          type: Localhost
          localhostProfile: infra-seccomp.json
      automountServiceAccountToken: false
      containers:
      - name: space-monitor 
        image: swr.cn-north-4.myhuaweicloud.com/opensourceway/gitea/merlin-space-monitor-test:jq-61b584
        imagePullPolicy: IfNotPresent
        args:
        - --rm-cfg=true
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8124
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8124
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "4"
            memory: 8Gi
          requests:
            cpu: "2"
            memory: 2Gi
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
      volumes:
      - name: token-vol
        projected:
          sources:
          - serviceAccountToken:
              audience: api
              expirationSeconds: 600
              path: token
