apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  name: openeuler-usercenter-ingress
  namespace: openeuler-usercenter
spec:
  tls:
    - hosts:
      - openeuler-usercenter.test.osinfra.cn
      secretName: openeuler-usercenter-tls
  rules:
    - host: openeuler-usercenter.test.osinfra.cn
      http:
        paths:
        - backend:
            serviceName: openeuler-usercenter-service
            servicePort: 8080
          path: /

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Content-Type-Options "nosniff";
      add_header X-Frame-Options "DENY";
      add_header Cache-Control "no-cache";
      add_header Pragma "no-cache";
  name: opengauss-usercenter-new-ingress
  namespace: openeuler-usercenter
spec:
  tls:
    - hosts:
      - id-opengauss.test.osinfra.cn
      secretName: opengauss-usercenter-new-tls
  rules:
    - host: id-opengauss.test.osinfra.cn
      http:
        paths:
        - backend:
            serviceName: opengauss-usercenter-service
            servicePort: 80
          path: /

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: openeuler-oneid-server-ingress
  namespace: openeuler-usercenter
spec:
  tls:
    - hosts:
      - oneid-server.test.osinfra.cn
      secretName: oneid-server-tls
  rules:
    - host: oneid-server.test.osinfra.cn
      http:
        paths:
        - backend:
            serviceName: oneid-server-service
            servicePort: 80
          path: /