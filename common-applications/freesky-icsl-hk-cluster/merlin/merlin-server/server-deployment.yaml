apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
  namespace: merlin-icsl
spec:
  selector:
    matchLabels:
      app: server
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'merlin-icsl'
        vault.hashicorp.com/agent-inject-secret-compose-config.yml: 'internal/data/icsl/merlin'
        vault.hashicorp.com/agent-inject-secret-redis.crt: 'internal/data/icsl/merlin'
        vault.hashicorp.com/agent-inject-secret-pqsql.crt: 'internal/data/icsl/merlin'
        vault.hashicorp.com/agent-inject-secret-server.crt: 'internal/data/icsl/merlin'
        vault.hashicorp.com/agent-inject-secret-server.key: 'internal/data/icsl/merlin'
        vault.hashicorp.com/agent-inject-secret-kafka.crt: 'internal/data/icsl/merlin'
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-inject-perms-compose-config.yml: "0400"
        vault.hashicorp.com/agent-inject-perms-redis.crt: "0400"
        vault.hashicorp.com/agent-inject-perms-pqsql.crt: "0400"
        vault.hashicorp.com/agent-inject-perms-server.crt: "0400"
        vault.hashicorp.com/agent-inject-perms-server.key: "0400"
        vault.hashicorp.com/agent-inject-perms-kafka.crt: "0400"
        vault.hashicorp.com/agent-run-as-user: "1000"
        vault.hashicorp.com/agent-run-as-group: "1000"
        vault.hashicorp.com/agent-inject-template-compose-config.yml: |  
          {{- with secret "internal/data/icsl/merlin" -}}  
          {{ .Data.data.application }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-redis.crt: |  
          {{- with secret "internal/data/icsl/merlin" -}}  
          {{ .Data.data.redisCA }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-pqsql.crt: |  
          {{- with secret "internal/data/icsl/merlin" -}}  
          {{ .Data.data.pqsqlCA }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-server.crt: |  
          {{- with secret "internal/data/icsl/merlin" -}}  
          {{ .Data.data.ServerCrt }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-server.key: |  
          {{- with secret "internal/data/icsl/merlin" -}}  
          {{ .Data.data.ServerKey }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-kafka.crt: |  
          {{- with secret "internal/data/icsl/merlin" -}}  
          {{ .Data.data.kafkaCA }}
          {{- end }}
        vault.hashicorp.com/agent-service-account-token-volume-name: "token-vol"
      labels:
        app: server
    spec:
      tolerations:
      - key: "icsl"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      nodeSelector:
        icsl: "true"
      serviceAccount: merlin-icsl
      imagePullSecrets:
      - name: huawei-swr-image-pull-secret
      securityContext:
        seccompProfile:
          type: Localhost
          localhostProfile: infra-seccomp.json
      automountServiceAccountToken: false
      containers:
      - image: swr.cn-north-4.myhuaweicloud.com/opensourceway/gitea/merlin-server-test:new
        imagePullPolicy: IfNotPresent        
        args:
        - --port=8080
        - --config-file=/vault/secrets/compose-config.yml
        - --enable_debug=true
        - --rm-cfg=true
        - --cert=/vault/secrets/server.crt
        - --key=/vault/secrets/server.key
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          httpGet:
            scheme: HTTPS
            path: /api/swagger/index.html
            port: 8080
          timeoutSeconds: 5
        name: server
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          httpGet:
            scheme: HTTPS
            path: /api/swagger/index.html
            port: 8080
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1000
      volumes:
      - name: token-vol
        projected:
          sources:
          - serviceAccountToken:
              audience: api
              expirationSeconds: 600
              path: token
